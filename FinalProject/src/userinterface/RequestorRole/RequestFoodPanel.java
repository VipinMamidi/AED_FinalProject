/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.RequestorRole;

import Business.EcoSystem;
import Business.FCPantry.FCPantry;
import Business.Reqorder.Reqorder;
import Business.Reqorder.ReqorderDirectory;
import Business.Requestor.Requestor;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sowmyachinimilli
 */
public class RequestFoodPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestFoodPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    String reqUName;
    String reqName;
    String reqState;
    ReqorderDirectory rqorD;
    public RequestFoodPanel(JPanel userProcessContainer,EcoSystem ecosystem,UserAccount userAcc) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.ecosystem =ecosystem;
        this.userAcc = userAcc;
        reqUName = userAcc.getUsername();
        reqName  = userAcc.getEmployee().getName();
        if(ecosystem.getReqorderDirectory()== null){
         ecosystem.setReqorderDirectory(new ReqorderDirectory());
        }
        String reqState = ecosystem.getReqDir().getreqState(reqUName);
         ArrayList<String> CityList = new ArrayList<String>();
        for (FCPantry fcp : ecosystem.getFCPDirectory().getFcpList()){
            if(fcp.getFcpState().equals(reqState)){
                CityList.add(fcp.getFcpCity());
            }
        }         
        cbCity.setModel(new DefaultComboBoxModel<String>(CityList.toArray(new String[0])));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDonProfileTitle = new javax.swing.JLabel();
        lblDfdquan = new javax.swing.JLabel();
        sdQuan = new javax.swing.JSlider();
        lblDonProfileTitle1 = new javax.swing.JLabel();
        chkAdd = new javax.swing.JCheckBox();
        lblDadd = new javax.swing.JLabel();
        txtDadd = new javax.swing.JTextField();
        lblDcity = new javax.swing.JLabel();
        txtDcity = new javax.swing.JTextField();
        lblDstate = new javax.swing.JLabel();
        txtDstate = new javax.swing.JTextField();
        lblDzip = new javax.swing.JLabel();
        txtDzip = new javax.swing.JTextField();
        lblDfdquan2 = new javax.swing.JLabel();
        cbCity = new javax.swing.JComboBox<>();
        lblDfdquan3 = new javax.swing.JLabel();
        cbWH = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        lblDfdquan1 = new javax.swing.JLabel();
        lblDfdquan4 = new javax.swing.JLabel();
        lblDfdquan5 = new javax.swing.JLabel();
        lblDfdquan6 = new javax.swing.JLabel();
        cbDel = new javax.swing.JComboBox<>();

        lblDonProfileTitle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDonProfileTitle.setText("Request Food");

        lblDfdquan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan.setText("Request for");

        sdQuan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sdQuan.setMajorTickSpacing(10);
        sdQuan.setMinimum(10);
        sdQuan.setPaintTicks(true);
        sdQuan.setAutoscrolls(true);

        lblDonProfileTitle1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDonProfileTitle1.setText("Delivery Address");

        chkAdd.setText("Same Address as in Profile");
        chkAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAddActionPerformed(evt);
            }
        });

        lblDadd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDadd.setText("Address");

        txtDadd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDadd.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDadd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDaddFocusLost(evt);
            }
        });

        lblDcity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDcity.setText("City");

        txtDcity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDcity.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDcity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDcityFocusLost(evt);
            }
        });

        lblDstate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDstate.setText("State");

        txtDstate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDstate.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDstate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDstateFocusLost(evt);
            }
        });

        lblDzip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDzip.setText("Zipcode");

        txtDzip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDzip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDzip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDzipFocusLost(evt);
            }
        });

        lblDfdquan2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan2.setText("Select city");

        cbCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCityActionPerformed(evt);
            }
        });

        lblDfdquan3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan3.setText("Select a nearest pantry");

        cbWH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSubmit.setText("Submit Request");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblDfdquan1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDfdquan1.setText("Min 10");

        lblDfdquan4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDfdquan4.setText("Max 100");

        lblDfdquan5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDfdquan5.setText("persons");

        lblDfdquan6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan6.setText("Select delivery type");

        cbDel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbDel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-select-", "Take Out", "Delivery" }));
        cbDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(450, 450, 450)
                .addComponent(lblDonProfileTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(lblDfdquan))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDfdquan3)
                            .addComponent(lblDfdquan6))
                        .addGap(52, 52, 52)
                        .addComponent(cbDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblDonProfileTitle1)
                                .addGap(39, 39, 39))
                            .addComponent(chkAdd, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDzip, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDcity, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDadd, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDstate, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDzip, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDcity, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDadd, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDstate, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(107, 107, 107))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(397, 397, 397)
                            .addComponent(btnSubmit))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(183, 183, 183)
                            .addComponent(lblDfdquan2)
                            .addGap(45, 45, 45)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbWH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblDfdquan4)
                                        .addComponent(sdQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblDfdquan5))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(263, 263, 263)
                            .addComponent(lblDfdquan1)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblDonProfileTitle)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(lblDfdquan)
                        .addGap(127, 127, 127)
                        .addComponent(lblDfdquan3)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDfdquan6)
                            .addComponent(cbDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDonProfileTitle1)
                                .addGap(18, 18, 18)
                                .addComponent(chkAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDadd)
                                    .addComponent(txtDadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDcity)
                                    .addComponent(txtDcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDstate)
                            .addComponent(txtDstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDzip)
                            .addComponent(txtDzip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(220, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(145, 145, 145)
                            .addComponent(sdQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(154, 154, 154)
                            .addComponent(lblDfdquan5)))
                    .addGap(2, 2, 2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDfdquan1)
                        .addComponent(lblDfdquan4))
                    .addGap(45, 45, 45)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDfdquan2))
                    .addGap(25, 25, 25)
                    .addComponent(cbWH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                    .addComponent(btnSubmit)
                    .addGap(95, 95, 95)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chkAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAddActionPerformed
        // TODO add your handling code here:
        if(chkAdd.isSelected()){
            for(Requestor r: ecosystem.getReqDir().getReqAccList()){
                if(r.getReqUserName().equals(reqUName)){
                    txtDadd.setText(r.getReqAddres());
                    txtDcity.setText(r.getReqCity());
                    txtDstate.setText(r.getReqState());
                    txtDzip.setText(r.getReqZipcode());
                }
            }
        }
        else{
            txtDadd.setText("");
            txtDcity.setText("");
            txtDstate.setText("");
            txtDzip.setText("");
        }
    }//GEN-LAST:event_chkAddActionPerformed

    private void txtDaddFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDaddFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDaddFocusLost

    private void txtDcityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDcityFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDcityFocusLost

    private void txtDstateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDstateFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDstateFocusLost

    private void txtDzipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDzipFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDzipFocusLost

    private void cbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCityActionPerformed
        // TODO add your handling code here:
        String city=cbCity.getSelectedItem().toString();
        ArrayList<String> ptList = new ArrayList<String>();
        for (FCPantry fcp : ecosystem.getFCPDirectory().getFcpList()){
            if(fcp.getFcpCity().equals(city)){
                ptList.add(fcp.getFcpName());
            }
        }
        cbWH.setModel(new DefaultComboBoxModel<String>(ptList.toArray(new String[0])));
    }//GEN-LAST:event_cbCityActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(!nullCheck()){
            Reqorder rq= new Reqorder();
            rq.setReqOrderId("1");
            rq.setReqName(reqName);
            rq.setReqOrderQuant(String.valueOf(sdQuan.getValue()));
            rq.setReqOrderType(cbDel.getSelectedItem().toString());
            rq.setReqOrderStatus("Requested");
            rq.setReqPantryName(cbWH.getSelectedItem().toString());
            UserAccount ua=new UserAccount();
            ua.setUsername(userAcc.getUsername());
            ua.setPassword(userAcc.getPassword());
            rq.setReqRequestorAcc(ua);
            rq.setReqAdd(txtDadd.getText());
            rq.setReqCity(txtDcity.getText());
            rq.setReqZip(txtDzip.getText());
            rqorD = ecosystem.getReqorderDirectory();
            rqorD.addNewReqorder(rq);
            ecosystem.setReqorderDirectory(rqorD);
            JOptionPane.showMessageDialog(this, "Your request has been placed. We love to serve you soon!");
            clearfields();
        }
        else{
            JOptionPane.showMessageDialog(this, "Please make sure that you have filled all mandatory fields");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDelActionPerformed
        // TODO add your handling code here:
        if(cbDel.getSelectedIndex()==1){
            lblDonProfileTitle1.setVisible(false);
            chkAdd.setVisible(false);
            lblDadd.setVisible(false);
            txtDadd.setVisible(false);
            lblDcity.setVisible(false);
            txtDcity.setVisible(false);
            lblDstate.setVisible(false);
            txtDstate.setVisible(false);
            lblDzip.setVisible(false);
            txtDzip.setVisible(false);
        }
        else{
            lblDonProfileTitle1.setVisible(true);
            chkAdd.setVisible(true);
            lblDadd.setVisible(true);
            txtDadd.setVisible(true);
            lblDcity.setVisible(true);
            txtDcity.setVisible(true);
            lblDstate.setVisible(true);
            txtDstate.setVisible(true);
            lblDzip.setVisible(true);
            txtDzip.setVisible(true);
        }
    }//GEN-LAST:event_cbDelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbCity;
    private javax.swing.JComboBox<String> cbDel;
    private javax.swing.JComboBox<String> cbWH;
    private javax.swing.JCheckBox chkAdd;
    private javax.swing.JLabel lblDadd;
    private javax.swing.JLabel lblDcity;
    private javax.swing.JLabel lblDfdquan;
    private javax.swing.JLabel lblDfdquan1;
    private javax.swing.JLabel lblDfdquan2;
    private javax.swing.JLabel lblDfdquan3;
    private javax.swing.JLabel lblDfdquan4;
    private javax.swing.JLabel lblDfdquan5;
    private javax.swing.JLabel lblDfdquan6;
    private javax.swing.JLabel lblDonProfileTitle;
    private javax.swing.JLabel lblDonProfileTitle1;
    private javax.swing.JLabel lblDstate;
    private javax.swing.JLabel lblDzip;
    private javax.swing.JSlider sdQuan;
    private javax.swing.JTextField txtDadd;
    private javax.swing.JTextField txtDcity;
    private javax.swing.JTextField txtDstate;
    private javax.swing.JTextField txtDzip;
    // End of variables declaration//GEN-END:variables

    private boolean nullCheck() {
        if(txtDadd.getText().length()!=0 && txtDcity.getText().length()!=0 && 
                txtDstate.getText().length()!=0 && txtDzip.getText().length()!=0 )
        {
            return false;
        }
        else return true;
    }

    private void clearfields() {
        txtDadd.setText("");
        txtDcity.setText("");
        txtDstate.setText("");
        txtDzip.setText("");
        cbCity.setSelectedIndex(0);
        cbWH.setSelectedIndex(0);
        sdQuan.setExtent(0);
        chkAdd.setSelected(false);
        cbCity.setSelectedIndex(0);
        cbWH.setSelectedIndex(0);
        cbDel.setSelectedIndex(0);
    }
}
