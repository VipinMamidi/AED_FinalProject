/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.RequestorRole;

import Business.EcoSystem;
import Business.FCPantry.FCPantry;
import Business.Reqorder.Reqorder;
import Business.Reqorder.ReqorderDirectory;
import Business.Requestor.Requestor;
import Business.UserAccount.UserAccount;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sowmyachinimilli
 */
public class RequestFoodPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestFoodPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    String reqUName;
    String reqName;
    String reqState;
    ReqorderDirectory rqorD;
    public RequestFoodPanel(JPanel userProcessContainer,EcoSystem ecosystem,UserAccount userAcc) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.ecosystem =ecosystem;
        this.userAcc = userAcc;
        reqUName = userAcc.getUsername();
        reqName  = userAcc.getEmployee().getName();
        if(ecosystem.getReqorderDirectory()== null){
         ecosystem.setReqorderDirectory(new ReqorderDirectory());
        }
        String reqState = ecosystem.getReqDir().getreqState(reqUName);
         ArrayList<String> CityList = new ArrayList<String>();
        for (FCPantry fcp : ecosystem.getFCPDirectory().getFcpList()){
            if(fcp.getFcpState().equals(reqState)){
                CityList.add(fcp.getFcpCity());
            }
        }         
        cbCity.setModel(new DefaultComboBoxModel<String>(CityList.toArray(new String[0])));
        setBG();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDonProfileTitle = new javax.swing.JLabel();
        lblDfdquan = new javax.swing.JLabel();
        sdQuan = new javax.swing.JSlider();
        lblDonProfileTitle1 = new javax.swing.JLabel();
        chkAdd = new javax.swing.JCheckBox();
        lblDadd = new javax.swing.JLabel();
        txtDadd = new javax.swing.JTextField();
        lblDcity = new javax.swing.JLabel();
        txtDcity = new javax.swing.JTextField();
        lblDstate = new javax.swing.JLabel();
        txtDstate = new javax.swing.JTextField();
        lblDzip = new javax.swing.JLabel();
        txtDzip = new javax.swing.JTextField();
        lblDfdquan2 = new javax.swing.JLabel();
        cbCity = new javax.swing.JComboBox<>();
        lblDfdquan3 = new javax.swing.JLabel();
        cbWH = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        lblDfdquan1 = new javax.swing.JLabel();
        lblDfdquan4 = new javax.swing.JLabel();
        lblDfdquan5 = new javax.swing.JLabel();
        lblDfdquan6 = new javax.swing.JLabel();
        cbDel = new javax.swing.JComboBox<>();
        LabelImg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDonProfileTitle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDonProfileTitle.setText("Request Food");
        add(lblDonProfileTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 16, -1, -1));

        lblDfdquan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan.setText("Request for");
        add(lblDfdquan, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 153, -1, -1));

        sdQuan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sdQuan.setMajorTickSpacing(10);
        sdQuan.setMinimum(10);
        sdQuan.setPaintTicks(true);
        sdQuan.setAutoscrolls(true);
        add(sdQuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 145, -1, -1));

        lblDonProfileTitle1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDonProfileTitle1.setText("Delivery Address");
        add(lblDonProfileTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 110, -1, -1));

        chkAdd.setText("Same Address as in Profile");
        chkAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAddActionPerformed(evt);
            }
        });
        add(chkAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 150, -1, -1));

        lblDadd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDadd.setText("Address");
        add(lblDadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 220, -1, -1));

        txtDadd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDadd.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDadd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDaddFocusLost(evt);
            }
        });
        add(txtDadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 220, 137, -1));

        lblDcity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDcity.setText("City");
        add(lblDcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 280, -1, -1));

        txtDcity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDcity.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDcity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDcityFocusLost(evt);
            }
        });
        add(txtDcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 270, 137, -1));

        lblDstate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDstate.setText("State");
        add(lblDstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 320, -1, -1));

        txtDstate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDstate.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDstate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDstateFocusLost(evt);
            }
        });
        add(txtDstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 320, 137, -1));

        lblDzip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDzip.setText("Zipcode");
        add(lblDzip, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 370, -1, -1));

        txtDzip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDzip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDzip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDzipFocusLost(evt);
            }
        });
        add(txtDzip, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 360, 137, -1));

        lblDfdquan2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan2.setText("Select city");
        add(lblDfdquan2, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 249, -1, -1));

        cbCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCityActionPerformed(evt);
            }
        });
        add(cbCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 245, -1, -1));

        lblDfdquan3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan3.setText("Select a nearest pantry");
        add(lblDfdquan3, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 297, -1, -1));

        cbWH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cbWH, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 297, -1, -1));

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSubmit.setText("Submit Request");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 430, -1, -1));

        lblDfdquan1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDfdquan1.setText("Min 10");
        add(lblDfdquan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 185, -1, -1));

        lblDfdquan4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDfdquan4.setText("Max 100");
        add(lblDfdquan4, new org.netbeans.lib.awtextra.AbsoluteConstraints(434, 185, -1, -1));

        lblDfdquan5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDfdquan5.setText("persons");
        add(lblDfdquan5, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 154, -1, -1));

        lblDfdquan6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblDfdquan6.setText("Select delivery type");
        add(lblDfdquan6, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 344, -1, -1));

        cbDel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbDel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-select-", "Take Out", "Delivery" }));
        cbDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDelActionPerformed(evt);
            }
        });
        add(cbDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 340, -1, -1));
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 6, 1590, 840));
    }// </editor-fold>//GEN-END:initComponents

    private void chkAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAddActionPerformed
        // TODO add your handling code here:
        if(chkAdd.isSelected()){
            for(Requestor r: ecosystem.getReqDir().getReqAccList()){
                if(r.getReqUserName().equals(reqUName)){
                    txtDadd.setText(r.getReqAddres());
                    txtDcity.setText(r.getReqCity());
                    txtDstate.setText(r.getReqState());
                    txtDzip.setText(r.getReqZipcode());
                }
            }
        }
        else{
            txtDadd.setText("");
            txtDcity.setText("");
            txtDstate.setText("");
            txtDzip.setText("");
        }
    }//GEN-LAST:event_chkAddActionPerformed

    public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1650, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(RequestFoodPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void txtDaddFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDaddFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDaddFocusLost

    private void txtDcityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDcityFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDcityFocusLost

    private void txtDstateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDstateFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDstateFocusLost

    private void txtDzipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDzipFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDzipFocusLost

    private void cbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCityActionPerformed
        // TODO add your handling code here:
        String city=cbCity.getSelectedItem().toString();
        ArrayList<String> ptList = new ArrayList<String>();
        for (FCPantry fcp : ecosystem.getFCPDirectory().getFcpList()){
            if(fcp.getFcpCity().equals(city)){
                ptList.add(fcp.getFcpName());
            }
        }
        cbWH.setModel(new DefaultComboBoxModel<String>(ptList.toArray(new String[0])));
    }//GEN-LAST:event_cbCityActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(!nullCheck()){
            Reqorder rq= new Reqorder();
            rq.setReqOrderId("1");
            rq.setReqName(reqName);
            rq.setReqOrderQuant(String.valueOf(sdQuan.getValue()));
            rq.setReqOrderType(cbDel.getSelectedItem().toString());
            rq.setReqOrderStatus("Requested");
            rq.setReqPantryName(cbWH.getSelectedItem().toString());
            UserAccount ua=new UserAccount();
            ua.setUsername(userAcc.getUsername());
            ua.setPassword(userAcc.getPassword());
            rq.setReqRequestorAcc(ua);
            rq.setReqAdd(txtDadd.getText());
            rq.setReqCity(txtDcity.getText());
            rq.setReqZip(txtDzip.getText());
            rqorD = ecosystem.getReqorderDirectory();
            rqorD.addNewReqorder(rq);
            ecosystem.setReqorderDirectory(rqorD);
            JOptionPane.showMessageDialog(this, "Your request has been placed. We love to serve you soon!");
            clearfields();
        }
        else{
            JOptionPane.showMessageDialog(this, "Please make sure that you have filled all mandatory fields");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDelActionPerformed
        // TODO add your handling code here:
        if(cbDel.getSelectedIndex()==1){
            lblDonProfileTitle1.setVisible(false);
            chkAdd.setVisible(false);
            lblDadd.setVisible(false);
            txtDadd.setVisible(false);
            lblDcity.setVisible(false);
            txtDcity.setVisible(false);
            lblDstate.setVisible(false);
            txtDstate.setVisible(false);
            lblDzip.setVisible(false);
            txtDzip.setVisible(false);
        }
        else{
            lblDonProfileTitle1.setVisible(true);
            chkAdd.setVisible(true);
            lblDadd.setVisible(true);
            txtDadd.setVisible(true);
            lblDcity.setVisible(true);
            txtDcity.setVisible(true);
            lblDstate.setVisible(true);
            txtDstate.setVisible(true);
            lblDzip.setVisible(true);
            txtDzip.setVisible(true);
        }
    }//GEN-LAST:event_cbDelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbCity;
    private javax.swing.JComboBox<String> cbDel;
    private javax.swing.JComboBox<String> cbWH;
    private javax.swing.JCheckBox chkAdd;
    private javax.swing.JLabel lblDadd;
    private javax.swing.JLabel lblDcity;
    private javax.swing.JLabel lblDfdquan;
    private javax.swing.JLabel lblDfdquan1;
    private javax.swing.JLabel lblDfdquan2;
    private javax.swing.JLabel lblDfdquan3;
    private javax.swing.JLabel lblDfdquan4;
    private javax.swing.JLabel lblDfdquan5;
    private javax.swing.JLabel lblDfdquan6;
    private javax.swing.JLabel lblDonProfileTitle;
    private javax.swing.JLabel lblDonProfileTitle1;
    private javax.swing.JLabel lblDstate;
    private javax.swing.JLabel lblDzip;
    private javax.swing.JSlider sdQuan;
    private javax.swing.JTextField txtDadd;
    private javax.swing.JTextField txtDcity;
    private javax.swing.JTextField txtDstate;
    private javax.swing.JTextField txtDzip;
    // End of variables declaration//GEN-END:variables

    private boolean nullCheck() {
        if(txtDadd.getText().length()!=0 && txtDcity.getText().length()!=0 && 
                txtDstate.getText().length()!=0 && txtDzip.getText().length()!=0 )
        {
            return false;
        }
        else return true;
    }

    private void clearfields() {
        txtDadd.setText("");
        txtDcity.setText("");
        txtDstate.setText("");
        txtDzip.setText("");
        cbCity.setSelectedIndex(0);
        cbWH.setSelectedIndex(0);
        sdQuan.setExtent(0);
        chkAdd.setSelected(false);
        cbCity.setSelectedIndex(0);
        cbWH.setSelectedIndex(0);
        cbDel.setSelectedIndex(0);
    }
}
