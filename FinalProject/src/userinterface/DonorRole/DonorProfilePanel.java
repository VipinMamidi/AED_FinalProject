/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.DonorRole;

import Business.Donor.Donor;
import Business.Donor.DonorDirectory;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sowmyachinimilli
 */
public class DonorProfilePanel extends javax.swing.JPanel {

    /**
     * Creates new form DonorProfilePanle
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    String DonUname;
    DonorDirectory donDir;

    public DonorProfilePanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        populateFields();
        btnSubmit.setVisible(false);
        btnCancel.setVisible(false);
        lblDpwd1.setVisible(false);
        txtDpwd1.setVisible(false);
        DonUname = userAcc.getUsername();
        setBG();
        setLogo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDonProfileTitle = new javax.swing.JLabel();
        lblDName = new javax.swing.JLabel();
        txtDname = new javax.swing.JTextField();
        lblDphno = new javax.swing.JLabel();
        txtDphno = new javax.swing.JTextField();
        lblDadd = new javax.swing.JLabel();
        txtDadd = new javax.swing.JTextField();
        lblDcity = new javax.swing.JLabel();
        txtDcity = new javax.swing.JTextField();
        lblDstate = new javax.swing.JLabel();
        txtDstate = new javax.swing.JTextField();
        lblDzip = new javax.swing.JLabel();
        txtDzip = new javax.swing.JTextField();
        lblDemail = new javax.swing.JLabel();
        txtDemail = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lblUname = new javax.swing.JLabel();
        txtDuname = new javax.swing.JTextField();
        lblDpwd = new javax.swing.JLabel();
        txtDpwd = new javax.swing.JTextField();
        lblDpwd1 = new javax.swing.JLabel();
        txtDpwd1 = new javax.swing.JTextField();
        lblDName1 = new javax.swing.JLabel();
        lblDphno1 = new javax.swing.JLabel();
        lblDadd1 = new javax.swing.JLabel();
        lblDcity1 = new javax.swing.JLabel();
        lblDstate1 = new javax.swing.JLabel();
        lblDzip1 = new javax.swing.JLabel();
        lblDemail1 = new javax.swing.JLabel();
        lblUname1 = new javax.swing.JLabel();
        lblDpwd2 = new javax.swing.JLabel();
        lblDpwd3 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        logoImage = new javax.swing.JLabel();
        LabelImage = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(2000, 1100));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDonProfileTitle.setFont(new java.awt.Font("Georgia", 1, 29)); // NOI18N
        lblDonProfileTitle.setForeground(new java.awt.Color(51, 153, 255));
        lblDonProfileTitle.setText("My Food Cloud Profile");
        add(lblDonProfileTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 20, -1, -1));

        lblDName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDName.setText("Name :");
        add(lblDName, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));

        txtDname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDnameFocusLost(evt);
            }
        });
        add(txtDname, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 137, -1));

        lblDphno.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDphno.setText("Phone Number :");
        add(lblDphno, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, -1, -1));

        txtDphno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDphno.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDphno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDphnoFocusLost(evt);
            }
        });
        add(txtDphno, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, 137, -1));

        lblDadd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDadd.setText("Address :");
        add(lblDadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, -1, -1));

        txtDadd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDadd.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDadd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDaddFocusLost(evt);
            }
        });
        add(txtDadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 137, -1));

        lblDcity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDcity.setText("City :");
        add(lblDcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, -1, -1));

        txtDcity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDcity.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDcity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDcityFocusLost(evt);
            }
        });
        add(txtDcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 137, -1));

        lblDstate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDstate.setText("State :");
        add(lblDstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 260, -1, -1));

        txtDstate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDstate.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDstate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDstateFocusLost(evt);
            }
        });
        add(txtDstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, 137, -1));

        lblDzip.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDzip.setText("Zipcode :");
        add(lblDzip, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, -1, -1));

        txtDzip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDzip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDzip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDzipFocusLost(evt);
            }
        });
        add(txtDzip, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 137, -1));

        lblDemail.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDemail.setText("Email Id :");
        add(lblDemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 350, -1, -1));

        txtDemail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDemail.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDemail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDemailFocusLost(evt);
            }
        });
        add(txtDemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 137, -1));

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 530, -1, -1));

        btnEdit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnEdit.setText("Edit Profile");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 530, -1, -1));

        lblUname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblUname.setText("Username :");
        add(lblUname, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 390, -1, -1));

        txtDuname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDuname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDuname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDunameFocusLost(evt);
            }
        });
        add(txtDuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 137, -1));

        lblDpwd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDpwd.setText("Password :");
        add(lblDpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, -1, -1));

        txtDpwd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDpwd.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDpwd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDpwdFocusLost(evt);
            }
        });
        add(txtDpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 430, 137, -1));

        lblDpwd1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblDpwd1.setText("Confirm Password :");
        add(lblDpwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, -1, -1));

        txtDpwd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDpwd1.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDpwd1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDpwd1FocusLost(evt);
            }
        });
        add(txtDpwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, 137, -1));

        lblDName1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, -1, -1));

        lblDphno1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDphno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, -1, -1));

        lblDadd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDadd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, -1, -1));

        lblDcity1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDcity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, -1, -1));

        lblDstate1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDstate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 10, -1, -1));

        lblDzip1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDzip1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, -1, -1));

        lblDemail1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDemail1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, -1, -1));

        lblUname1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblUname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, -1, -1));

        lblDpwd2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDpwd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, -1, -1));

        lblDpwd3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDpwd3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 480, -1, -1));

        btnCancel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, -1, -1));
        add(logoImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 90, 80));

        LabelImage.setText(" ");
        add(LabelImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 700));
    }// </editor-fold>//GEN-END:initComponents

    public void setBG() {
        try {
            LabelImage.setMinimumSize(new Dimension(1500, 1000));
            LabelImage.setPreferredSize(new Dimension(1500, 1000));
            LabelImage.setMaximumSize(new Dimension(1500, 1000));
            
            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));
            
            Image newimg = img.getScaledInstance(1450, 950, java.awt.Image.SCALE_SMOOTH);
            LabelImage.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setLogo() {
        try {
            logoImage.setMinimumSize(new Dimension(100, 100));
            logoImage.setPreferredSize(new Dimension(100, 100));
            logoImage.setMaximumSize(new Dimension(100, 100));
            
            Image img = ImageIO.read(getClass().getResource("/Images/cmnlogo.jpeg"));
            
            Image newimg = img.getScaledInstance(100, 100, java.awt.Image.SCALE_SMOOTH);
            logoImage.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void txtDnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDnameFocusLost
        // TODO add your handling code here:
        if (!(txtDname.getText().matches("^[a-zA-Z]*$"))) {
            lblDName1.setText("Invalid input. Please enter only alphabets");
        } else {
            lblDName1.setText("");
        }
    }//GEN-LAST:event_txtDnameFocusLost

    private void txtDphnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDphnoFocusLost
        // TODO add your handling code here:
        if (!(txtDphno.getText().matches("^[0-9]*$")) || !(txtDphno.getText().length() == 10)) {
            lblDphno1.setText("Please enter a valid phone number");
        } else {
            lblDphno1.setText("");

        }
    }//GEN-LAST:event_txtDphnoFocusLost

    private void txtDaddFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDaddFocusLost
        // TODO add your handling code here:
        if (!(txtDadd.getText().matches("^[a-zA-Z]*$"))) {
            lblDadd1.setText("Invalid input. Please enter only alphabets");
        } else {
            lblDadd1.setText("");
        }
    }//GEN-LAST:event_txtDaddFocusLost

    private void txtDcityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDcityFocusLost
        // TODO add your handling code here:
        if (!(txtDcity.getText().matches("^[a-zA-Z]*$"))) {
            lblDcity1.setText("Invalid input. Please enter only alphabets");
        } else {
            lblDcity1.setText("");
        }
    }//GEN-LAST:event_txtDcityFocusLost

    private void txtDstateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDstateFocusLost
        // TODO add your handling code here:
        if (!(txtDstate.getText().matches("^[a-zA-Z]*$"))) {
            lblDstate1.setText("Invalid input. Please enter only alphabets");
        } else {
            lblDstate1.setText("");
        }
    }//GEN-LAST:event_txtDstateFocusLost

    private void txtDzipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDzipFocusLost
        // TODO add your handling code here:
        if ((txtDzip.getText().matches("^[a-zA-Z]*$"))) {
            lblDzip1.setText("Invalid input. Please enter only numbers");
        } else {
            lblDzip1.setText("");
        }
    }//GEN-LAST:event_txtDzipFocusLost

    private void txtDemailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDemailFocusLost
        // TODO add your handling code here:
        if ((!txtDemail.getText().isEmpty()) && !txtDemail.getText().matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$")) {
            lblDemail1.setText("Please Provide Valid Email Address !!");
        } else {
            lblDemail1.setText("");
        }
    }//GEN-LAST:event_txtDemailFocusLost

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (!nullCheck()) {
            ArrayList<Donor> donList = ecosystem.getDonDir().getDonorList();
            for (Donor d : donList) {
                if (d.getDonorAccount().getUsername().equals(DonUname)) {
                    d.setDonorName(txtDname.getText());
                    d.setDonorPhno(txtDphno.getText());
                    d.setDonorEmail(txtDemail.getText());
                    d.setDonorAddres(txtDadd.getText());
                    d.setDonorCity(txtDcity.getText());
                    d.setDonorState(txtDstate.getText());
                    d.setDonorZipcode(txtDzip.getText());
                    d.setDonUserName(txtDuname.getText());
                    d.setDonPwd(txtDpwd.getText());
                }
            }
            // ecosystem.setFCWDirectory(fcwList);
            donDir = ecosystem.getDonDir();
            ecosystem.setDonDir(donDir);
            JOptionPane.showMessageDialog(this, "Profile updated successfully");
            disableFields();
        } else {
            JOptionPane.showMessageDialog(this, "All fields are mandatory!");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        enablefields();
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtDunameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDunameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDunameFocusLost

    private void txtDpwdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDpwdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDpwdFocusLost

    private void txtDpwd1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDpwd1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDpwd1FocusLost

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        disableFields();
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImage;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblDName;
    private javax.swing.JLabel lblDName1;
    private javax.swing.JLabel lblDadd;
    private javax.swing.JLabel lblDadd1;
    private javax.swing.JLabel lblDcity;
    private javax.swing.JLabel lblDcity1;
    private javax.swing.JLabel lblDemail;
    private javax.swing.JLabel lblDemail1;
    private javax.swing.JLabel lblDonProfileTitle;
    private javax.swing.JLabel lblDphno;
    private javax.swing.JLabel lblDphno1;
    private javax.swing.JLabel lblDpwd;
    private javax.swing.JLabel lblDpwd1;
    private javax.swing.JLabel lblDpwd2;
    private javax.swing.JLabel lblDpwd3;
    private javax.swing.JLabel lblDstate;
    private javax.swing.JLabel lblDstate1;
    private javax.swing.JLabel lblDzip;
    private javax.swing.JLabel lblDzip1;
    private javax.swing.JLabel lblUname;
    private javax.swing.JLabel lblUname1;
    private javax.swing.JLabel logoImage;
    private javax.swing.JTextField txtDadd;
    private javax.swing.JTextField txtDcity;
    private javax.swing.JTextField txtDemail;
    private javax.swing.JTextField txtDname;
    private javax.swing.JTextField txtDphno;
    private javax.swing.JTextField txtDpwd;
    private javax.swing.JTextField txtDpwd1;
    private javax.swing.JTextField txtDstate;
    private javax.swing.JTextField txtDuname;
    private javax.swing.JTextField txtDzip;
    // End of variables declaration//GEN-END:variables

    private void populateFields() {
        for (Donor d : ecosystem.getDonDir().getDonorList()) {
            txtDname.setText(d.getDonorName());
            txtDname.setEnabled(false);
            txtDphno.setText(d.getDonorPhno());
            txtDphno.setEnabled(false);
            txtDemail.setText(d.getDonorEmail());
            txtDemail.setEnabled(false);
            txtDadd.setText(d.getDonorAddres());
            txtDadd.setEnabled(false);
            txtDcity.setText(d.getDonorCity());
            txtDcity.setEnabled(false);
            txtDstate.setText(d.getDonorState());
            txtDstate.setEnabled(false);
            txtDzip.setText(d.getDonorState());
            txtDzip.setEnabled(false);
            txtDuname.setText(d.getDonorAccount().getUsername());
            txtDuname.setEnabled(false);
            txtDpwd.setText(d.getDonorAccount().getPassword());
            txtDpwd.setEnabled(false);
        }
    }

    private void enablefields() {
        txtDname.setEnabled(true);
        txtDphno.setEnabled(true);
        txtDemail.setEnabled(true);
        txtDadd.setEnabled(true);
        txtDcity.setEnabled(true);
        txtDstate.setEnabled(true);
        txtDzip.setEnabled(true);
        txtDuname.setEnabled(true);
        txtDpwd.setEnabled(true);
        btnSubmit.setVisible(true);
        btnCancel.setVisible(true);
        lblDpwd1.setVisible(true);
        txtDpwd1.setVisible(true);
    }

    private boolean nullCheck() {
        if (txtDname.getText().length() != 0 && txtDphno.getText().length() != 0 && txtDemail.getText().length() != 0
                && txtDadd.getText().length() != 0 && txtDcity.getText().length() != 0 && txtDstate.getText().length() != 0
                && txtDzip.getText().length() != 0 && txtDuname.getText().length() != 0 && txtDpwd.getText().length() != 0
                && txtDpwd1.getText().length() != 0) {
            return false;
        } else {
            return true;
        }
    }

    private void disableFields() {
        txtDname.setEnabled(false);
        txtDphno.setEnabled(false);
        txtDemail.setEnabled(false);
        txtDadd.setEnabled(false);
        txtDcity.setEnabled(false);
        txtDstate.setEnabled(false);
        txtDzip.setEnabled(false);
        txtDuname.setEnabled(false);
        txtDpwd.setEnabled(false);
        btnSubmit.setVisible(false);
        btnCancel.setVisible(false);
        lblDpwd1.setVisible(false);
        txtDpwd1.setVisible(false);
        lblDName1.setText("");
        lblDphno1.setText("");
        lblDemail1.setText("");
        lblDadd1.setText("");
        lblDcity1.setText("");
        lblDstate1.setText("");
        lblDzip1.setText("");
        lblUname1.setText("");
        lblDpwd2.setText("");
        lblDpwd3.setText("");
    }
}