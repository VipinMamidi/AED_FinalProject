/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.FCPantry.FCPantry;
import Business.FCPantry.FCPantryDirectory;
import Business.Role.FCPManagerRole;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.DonorRole.DonorProfilePanel;

/**
 *
 * @author sowmyachinimilli
 */
public class AddFCPantryPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddFCPantryPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    FCPantryDirectory fcpd;
    UserAccountDirectory uad;
    public AddFCPantryPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        if(ecosystem.getFCPDirectory() == null){
         ecosystem.setFCPDirectory( new FCPantryDirectory());
        }
        
        setBG();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddFCPTitle = new javax.swing.JLabel();
        lblFCPname = new javax.swing.JLabel();
        txtFCPname = new javax.swing.JTextField();
        lblFCPPhno = new javax.swing.JLabel();
        txtFCPPhno = new javax.swing.JTextField();
        lblFCPAdd = new javax.swing.JLabel();
        txtFCPAdd = new javax.swing.JTextField();
        lblFCPCity = new javax.swing.JLabel();
        txtFCPCity = new javax.swing.JTextField();
        lblFCPState = new javax.swing.JLabel();
        txtFCPState = new javax.swing.JTextField();
        lblFCPZip = new javax.swing.JLabel();
        txtFCPZip = new javax.swing.JTextField();
        lblFCPManager = new javax.swing.JLabel();
        txtFCPManager = new javax.swing.JTextField();
        lblFCPuname = new javax.swing.JLabel();
        txtFCPuname = new javax.swing.JTextField();
        lblFCPpwd = new javax.swing.JLabel();
        txtFCPpwd = new javax.swing.JTextField();
        lblFCPpwd1 = new javax.swing.JLabel();
        txtFCPpwd1 = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblWHfcpname = new javax.swing.JLabel();
        txtWHfcpname = new javax.swing.JTextField();
        lblFCPid = new javax.swing.JLabel();
        txtFCPid = new javax.swing.JTextField();
        lblWHfcpname1 = new javax.swing.JLabel();
        lblFCPid1 = new javax.swing.JLabel();
        lblFCPname1 = new javax.swing.JLabel();
        lblFCPPhno1 = new javax.swing.JLabel();
        lblFCPAdd1 = new javax.swing.JLabel();
        lblFCPCity1 = new javax.swing.JLabel();
        lblFCPState1 = new javax.swing.JLabel();
        lblFCPZip1 = new javax.swing.JLabel();
        lblFCPManager1 = new javax.swing.JLabel();
        lblFCAuname1 = new javax.swing.JLabel();
        lblFCApwd2 = new javax.swing.JLabel();
        lblFCApwd3 = new javax.swing.JLabel();
        LabelImg = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddFCPTitle.setFont(new java.awt.Font("Georgia", 1, 29)); // NOI18N
        lblAddFCPTitle.setForeground(new java.awt.Color(51, 153, 255));
        lblAddFCPTitle.setText("Add Pantry");
        add(lblAddFCPTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));

        lblFCPname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPname.setText("Pantry Name :");
        add(lblFCPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 140, -1, -1));

        txtFCPname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPnameFocusLost(evt);
            }
        });
        add(txtFCPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 136, 137, -1));

        lblFCPPhno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPPhno.setText("Phone Number :");
        add(lblFCPPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 183, -1, -1));

        txtFCPPhno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPPhno.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPPhno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPPhnoFocusLost(evt);
            }
        });
        add(txtFCPPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 179, 137, -1));

        lblFCPAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPAdd.setText("Address :");
        add(lblFCPAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 226, -1, -1));

        txtFCPAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPAdd.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 222, 137, -1));

        lblFCPCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPCity.setText("City :");
        add(lblFCPCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 269, -1, -1));

        txtFCPCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPCity.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 265, 137, -1));

        lblFCPState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPState.setText("State :");
        add(lblFCPState, new org.netbeans.lib.awtextra.AbsoluteConstraints(314, 312, -1, -1));

        txtFCPState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPState.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFCPStateActionPerformed(evt);
            }
        });
        add(txtFCPState, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 308, 137, -1));

        lblFCPZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPZip.setText("Zipcode :");
        add(lblFCPZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 355, -1, -1));

        txtFCPZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPZip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPZipFocusLost(evt);
            }
        });
        txtFCPZip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFCPZipActionPerformed(evt);
            }
        });
        add(txtFCPZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 351, 137, -1));

        lblFCPManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPManager.setText("FC Pantry Manager :");
        add(lblFCPManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 398, -1, -1));

        txtFCPManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPManager.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPManager.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPManagerFocusLost(evt);
            }
        });
        add(txtFCPManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 394, 137, -1));

        lblFCPuname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPuname.setText("FCP Manager Username :");
        add(lblFCPuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 441, -1, -1));

        txtFCPuname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPuname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPuname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPunameFocusLost(evt);
            }
        });
        add(txtFCPuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 437, 137, -1));

        lblFCPpwd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPpwd.setText("Password :");
        add(lblFCPpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 484, -1, -1));

        txtFCPpwd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPpwd.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 480, 137, -1));

        lblFCPpwd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPpwd1.setText("Confirm Password :");
        add(lblFCPpwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 527, -1, -1));

        txtFCPpwd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPpwd1.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPpwd1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPpwd1FocusLost(evt);
            }
        });
        add(txtFCPpwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 523, 137, -1));

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 566, -1, -1));

        lblWHfcpname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHfcpname.setText("Warehouse Name :");
        add(lblWHfcpname, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 57, -1, -1));

        txtWHfcpname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHfcpname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHfcpname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHfcpnameFocusLost(evt);
            }
        });
        add(txtWHfcpname, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 53, 137, -1));

        lblFCPid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCPid.setText("Pantry Id :");
        add(lblFCPid, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 98, -1, -1));

        txtFCPid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPid.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPidFocusLost(evt);
            }
        });
        add(txtFCPid, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 94, 137, -1));

        lblWHfcpname1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblWHfcpname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 53, -1, -1));

        lblFCPid1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 94, -1, -1));

        lblFCPname1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 136, -1, -1));

        lblFCPPhno1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPPhno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 179, -1, -1));

        lblFCPAdd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPAdd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 222, -1, -1));

        lblFCPCity1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPCity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 265, -1, -1));

        lblFCPState1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPState1, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 308, -1, -1));

        lblFCPZip1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPZip1, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 351, -1, -1));

        lblFCPManager1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPManager1, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 394, -1, -1));

        lblFCAuname1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCAuname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 437, -1, -1));

        lblFCApwd2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCApwd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 480, -1, -1));

        lblFCApwd3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCApwd3, new org.netbeans.lib.awtextra.AbsoluteConstraints(542, 523, -1, -1));
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1470, 700));
    }// </editor-fold>//GEN-END:initComponents

     public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    private void txtFCPnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPnameFocusLost
        // TODO add your handling code here:
        if(!(txtFCPname.getText().matches("^[a-zA-Z]*$"))){
            lblFCPname1.setText("Invalid input. Please enter only alphabets");
        }
        else{
            lblFCPname1.setText("");
        }
    }//GEN-LAST:event_txtFCPnameFocusLost

    private void txtFCPPhnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPPhnoFocusLost
        // TODO add your handling code here:
        if(!(txtFCPPhno.getText().matches("^[0-9]*$")) || !(txtFCPPhno.getText().length()==10)) {
            lblFCPPhno1.setText("Please enter a valid phone number");
        }
        else{
            lblFCPPhno1.setText("");

        }
    }//GEN-LAST:event_txtFCPPhnoFocusLost

    private void txtFCPZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPZipFocusLost
        // TODO add your handling code here:
        if((txtFCPZip.getText().matches("^[a-zA-Z]*$"))){
            lblFCPZip1.setText("Invalid input. Please enter only numbers");
        }
        else{
            lblFCPZip1.setText("");
        }
    }//GEN-LAST:event_txtFCPZipFocusLost

    private void txtFCPManagerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPManagerFocusLost
        // TODO add your handling code here:
        if(!(txtFCPManager.getText().matches("^[a-zA-Z]*$"))){
            lblFCPManager1.setText("Invalid input. Please enter only alphabets");
        }
        else{
            lblFCPManager1.setText("");
        }
    }//GEN-LAST:event_txtFCPManagerFocusLost

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(!nullCheck()){
            UserAccountDirectory uaList = ecosystem.getUserAccountDirectory();
            Employee employee = new Employee();
            employee.setName(txtFCPname.getText());
            String role = "txtFCPManager";
            FCPantry fcp=new FCPantry();
            fcp.setFcpId("fcp"+txtFCPid.getText());
            fcp.setFcpWHname(txtWHfcpname.getText());
            fcp.setFcpName(txtFCPname.getText());
            fcp.setFcpPhno(txtFCPPhno.getText());
            fcp.setFcpAddres(txtFCPAdd.getText());
            fcp.setFcpCity(txtFCPCity.getText());
            fcp.setFcpState(txtFCPState.getText());
            fcp.setFcpZipcode(txtFCPZip.getText());
            fcp.setFcpManager(txtFCPManager.getText());
            UserAccount fcpAccount=new UserAccount();
            fcpAccount.setUsername(txtFCPuname.getText());
            fcpAccount.setPassword(txtFCPpwd.getText());
            fcpAccount.setRole(new FCPManagerRole());
            fcpAccount.setEmployee(employee);
            uad=ecosystem.getUserAccountDirectory();
            uad.createUserAccount(txtFCPuname.getText(), txtFCPpwd.getText(), employee, new FCPManagerRole());
            ecosystem.setUserAccountDirectory(uad);
            fcp.setFcpAccount(fcpAccount);
            fcpd = ecosystem.getFCPDirectory();
            fcpd.addNewFCPantry(fcp);
            ecosystem.setFCPDirectory(fcpd);
            
            //  fcpAccount.setRole(new FCAdminRole());
            //fcp.setFcpAccount(fcpAccount);
           // ecosystem.getFCPDirectory().addNewFCPantry(fcp);
            JOptionPane.showMessageDialog(this, "Food Cloud Pantry added successfully!");
            clearfields();
        }
        else{
            JOptionPane.showMessageDialog(this, "Please make sure that you have filled all mandatory fields");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtWHfcpnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHfcpnameFocusLost
        // TODO add your handling code here:
        if(!(txtWHfcpname.getText().matches("^[a-zA-Z]*$"))){
            lblWHfcpname1.setText("Invalid input. Please enter only alphabets");
        }
        else{
            lblWHfcpname1.setText("");
        }
    }//GEN-LAST:event_txtWHfcpnameFocusLost

    private void txtFCPStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFCPStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFCPStateActionPerformed

    private void txtFCPZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFCPZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFCPZipActionPerformed

    private void txtFCPidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPidFocusLost
        // TODO add your handling code here:
        if((txtFCPid.getText().matches("^[a-zA-Z]*$"))){
            lblFCPid1.setText("Invalid input. Please enter only numbers");
        }
        else{
            lblFCPid1.setText("");
        }
    }//GEN-LAST:event_txtFCPidFocusLost

    private void txtFCPunameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPunameFocusLost
        // TODO add your handling code here:
        if(!(txtFCPuname.getText().matches("^[a-zA-Z]*$"))){
            lblFCAuname1.setText("Invalid input. Please enter only alphabets");
        }
        else{
            lblFCAuname1.setText("");
        }
    }//GEN-LAST:event_txtFCPunameFocusLost

    
    private void txtFCPpwd1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPpwd1FocusLost
        // TODO add your handling code here:
        if(!(txtFCPpwd.getText().equals(txtFCPpwd1.getText()))){
            lblFCApwd2.setText("Password Mismatch. Please verify the password entered.");
        }
        else{
            lblFCApwd2.setText("");
        }
    }//GEN-LAST:event_txtFCPpwd1FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblAddFCPTitle;
    private javax.swing.JLabel lblFCApwd2;
    private javax.swing.JLabel lblFCApwd3;
    private javax.swing.JLabel lblFCAuname1;
    private javax.swing.JLabel lblFCPAdd;
    private javax.swing.JLabel lblFCPAdd1;
    private javax.swing.JLabel lblFCPCity;
    private javax.swing.JLabel lblFCPCity1;
    private javax.swing.JLabel lblFCPManager;
    private javax.swing.JLabel lblFCPManager1;
    private javax.swing.JLabel lblFCPPhno;
    private javax.swing.JLabel lblFCPPhno1;
    private javax.swing.JLabel lblFCPState;
    private javax.swing.JLabel lblFCPState1;
    private javax.swing.JLabel lblFCPZip;
    private javax.swing.JLabel lblFCPZip1;
    private javax.swing.JLabel lblFCPid;
    private javax.swing.JLabel lblFCPid1;
    private javax.swing.JLabel lblFCPname;
    private javax.swing.JLabel lblFCPname1;
    private javax.swing.JLabel lblFCPpwd;
    private javax.swing.JLabel lblFCPpwd1;
    private javax.swing.JLabel lblFCPuname;
    private javax.swing.JLabel lblWHfcpname;
    private javax.swing.JLabel lblWHfcpname1;
    private javax.swing.JTextField txtFCPAdd;
    private javax.swing.JTextField txtFCPCity;
    private javax.swing.JTextField txtFCPManager;
    private javax.swing.JTextField txtFCPPhno;
    private javax.swing.JTextField txtFCPState;
    private javax.swing.JTextField txtFCPZip;
    private javax.swing.JTextField txtFCPid;
    private javax.swing.JTextField txtFCPname;
    private javax.swing.JTextField txtFCPpwd;
    private javax.swing.JTextField txtFCPpwd1;
    private javax.swing.JTextField txtFCPuname;
    private javax.swing.JTextField txtWHfcpname;
    // End of variables declaration//GEN-END:variables

    private boolean nullCheck() {
        if(txtFCPid.getText().length()!=0 && txtFCPname.getText().length()!=0 && txtWHfcpname.getText().length()!=0 && 
                txtFCPPhno.getText().length()!=0 && txtFCPAdd.getText().length()!=0 && txtFCPCity.getText().length()!=0 && 
                txtFCPState.getText().length()!=0 && txtFCPZip.getText().length()!=0 && txtFCPManager.getText().length()!=0 && 
                txtFCPuname.getText().length()!=0 && txtFCPpwd.getText().length()!=0 && txtFCPpwd1.getText().length()!=0)
            {
                return false;
            }
            else return true;
        }

    private void clearfields() {
        txtFCPid.setText("");
        txtFCPname.setText("");
        txtWHfcpname.setText("");
        txtFCPPhno.setText("");
        txtFCPAdd.setText("");
        txtFCPCity.setText("");
        txtFCPState.setText("");
        txtFCPZip.setText("");
        txtFCPManager.setText("");
        txtFCPuname.setText("");
        txtFCPpwd.setText("");
    }
}
