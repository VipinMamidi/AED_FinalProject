/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.FCWarehouse.FCWarehouse;
import Business.FCWarehouse.FCWarehouseDirectory;
import Business.Role.FCAdminRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.DonorRole.DonorProfilePanel;

/**
 *
 * @author sowmyachinimilli
 */
public class AddWarehousePanel extends javax.swing.JPanel {

    /**
     * Creates new form AddWarehousePanel
     */
    private Image img;
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    FCWarehouseDirectory fcd;
    UserAccountDirectory uad;
    public AddWarehousePanel(String img) {
    this(new ImageIcon(img).getImage());
  }
    public AddWarehousePanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        if(ecosystem.getFCWDirectory() == null){
         ecosystem.setFCWDirectory( new FCWarehouseDirectory());
        }
        
        setBG();
        
    }
    
    public AddWarehousePanel(Image img) {
    this.img = img;
    Dimension size = new Dimension(img.getWidth(null), img.getHeight(null));
    setPreferredSize(size);
    setMinimumSize(size);
    setMaximumSize(size);
    setSize(size);
    setLayout(null);
  }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddWHTitle = new javax.swing.JLabel();
        lblWHname = new javax.swing.JLabel();
        txtWHname = new javax.swing.JTextField();
        lblWHPhno = new javax.swing.JLabel();
        txtWHPhno = new javax.swing.JTextField();
        lblWHAdd = new javax.swing.JLabel();
        txtWHAdd = new javax.swing.JTextField();
        lblWHCity = new javax.swing.JLabel();
        txtWHCity = new javax.swing.JTextField();
        lblWHState = new javax.swing.JLabel();
        txtWHState = new javax.swing.JTextField();
        lblWHZip = new javax.swing.JLabel();
        txtWHZip = new javax.swing.JTextField();
        lblWHFCAdmin = new javax.swing.JLabel();
        txtWHFCAdmin = new javax.swing.JTextField();
        lblFCAuname = new javax.swing.JLabel();
        txtFCAuname = new javax.swing.JTextField();
        lblFCApwd = new javax.swing.JLabel();
        txtFCApwd = new javax.swing.JTextField();
        lblFCApwd1 = new javax.swing.JLabel();
        txtFCApwd1 = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblWHid = new javax.swing.JLabel();
        txtWHid = new javax.swing.JTextField();
        lblWHid2 = new javax.swing.JLabel();
        lblWHname1 = new javax.swing.JLabel();
        lblWHPhno1 = new javax.swing.JLabel();
        lblWHZip1 = new javax.swing.JLabel();
        lblWHFCAdmin1 = new javax.swing.JLabel();
        lblFCApwd2 = new javax.swing.JLabel();
        LabelImg = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(840, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddWHTitle.setFont(new java.awt.Font("Georgia", 1, 29)); // NOI18N
        lblAddWHTitle.setForeground(new java.awt.Color(51, 153, 255));
        lblAddWHTitle.setText("Add Warehouse");
        add(lblAddWHTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 16, -1, -1));

        lblWHname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHname.setText("Warehouse Name*");
        add(lblWHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 114, -1, -1));

        txtWHname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHnameFocusLost(evt);
            }
        });
        add(txtWHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, 137, -1));

        lblWHPhno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHPhno.setText("Phone Number*");
        add(lblWHPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 157, -1, -1));

        txtWHPhno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHPhno.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHPhno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHPhnoFocusLost(evt);
            }
        });
        add(txtWHPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 153, 137, -1));

        lblWHAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHAdd.setText("Address*");
        add(lblWHAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 200, -1, -1));

        txtWHAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHAdd.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtWHAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 196, 137, -1));

        lblWHCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHCity.setText("City*");
        add(lblWHCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 243, -1, -1));

        txtWHCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHCity.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtWHCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 239, 137, -1));

        lblWHState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHState.setText("State*");
        add(lblWHState, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 286, -1, -1));

        txtWHState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHState.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtWHState, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 282, 137, -1));

        lblWHZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHZip.setText("Zipcode*");
        add(lblWHZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 329, -1, -1));

        txtWHZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHZip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHZipFocusLost(evt);
            }
        });
        add(txtWHZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 325, 137, -1));

        lblWHFCAdmin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHFCAdmin.setText("Food Cloud Admin*");
        add(lblWHFCAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 372, -1, -1));

        txtWHFCAdmin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHFCAdmin.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHFCAdmin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHFCAdminFocusLost(evt);
            }
        });
        add(txtWHFCAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 368, 137, -1));

        lblFCAuname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCAuname.setText("FCAdmin Username*");
        add(lblFCAuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 415, -1, -1));

        txtFCAuname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCAuname.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCAuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 411, 137, -1));

        lblFCApwd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCApwd.setText("Password*");
        add(lblFCApwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 458, -1, -1));

        txtFCApwd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCApwd.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCApwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 454, 137, -1));

        lblFCApwd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblFCApwd1.setText("Confirm Password*");
        add(lblFCApwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 501, -1, -1));

        txtFCApwd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCApwd1.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCApwd1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCApwd1FocusLost(evt);
            }
        });
        add(txtFCApwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 497, 137, -1));

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 549, -1, -1));

        lblWHid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWHid.setText("Warehouse Id*");
        add(lblWHid, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 71, -1, -1));

        txtWHid.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWHid.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWHid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWHidFocusLost(evt);
            }
        });
        txtWHid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWHidKeyReleased(evt);
            }
        });
        add(txtWHid, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 67, 134, -1));

        lblWHid2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblWHid2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 67, -1, -1));

        lblWHname1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblWHname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 110, -1, -1));

        lblWHPhno1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblWHPhno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 153, -1, -1));

        lblWHZip1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblWHZip1, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 325, -1, -1));

        lblWHFCAdmin1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblWHFCAdmin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 368, -1, -1));

        lblFCApwd2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCApwd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 497, -1, -1));
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 700));
    }// </editor-fold>//GEN-END:initComponents

     public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(!nullCheck()){
        UserAccountDirectory uaList = ecosystem.getUserAccountDirectory();
        Employee employee = new Employee();
        employee.setName(txtWHFCAdmin.getText());
        String role = "FCAdmin";
        FCWarehouse fcw=new FCWarehouse();
        fcw.setFcwId("fcw"+txtWHid.getText());
        fcw.setFcwName(txtWHname.getText());
        fcw.setFcwPhno(txtWHPhno.getText());
        fcw.setFcwAddres(txtWHAdd.getText());
        fcw.setFcwCity(txtWHCity.getText());
        fcw.setFcwState(txtWHState.getText());
        fcw.setFcwZipcode(txtWHZip.getText());
        fcw.setFcwAdmin(txtWHFCAdmin.getText());
        UserAccount fcwAccount=new UserAccount();
        String uaName = txtFCAuname.getText();
        fcwAccount.setUsername(uaName);
        String uaPwd = txtFCApwd.getText();
        fcwAccount.setPassword(uaPwd);
        fcwAccount.setRole(new FCAdminRole());
        fcwAccount.setEmployee(employee);
        fcw.setFcwAccount(fcwAccount);
       fcd = ecosystem.getFCWDirectory();
       fcd.addNewFCWarehouse(fcw);
       ecosystem.setFCWDirectory(fcd);
        uad=ecosystem.getUserAccountDirectory();
        uad.createUserAccount(txtFCAuname.getText(), txtFCApwd.getText(), employee, new FCAdminRole());
        ecosystem.setUserAccountDirectory(uad);
       JOptionPane.showMessageDialog(this, "Food Cloud Warehouse added successfully!");
       clearfields(); 
        }
        else{
            JOptionPane.showMessageDialog(this, "Please make sure that you have filled all mandatory fields");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtWHidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWHidKeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtWHidKeyReleased

    private void txtWHidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHidFocusLost
        // TODO add your handling code here:
        if((txtWHid.getText().matches("^[a-zA-Z]*$"))){
            lblWHid2.setText("Invalid input. Please enter only numbers");
        }
        else{
            lblWHid2.setText("");
        }
    }//GEN-LAST:event_txtWHidFocusLost

    private void txtWHnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHnameFocusLost
        // TODO add your handling code here:
        if(!(txtWHname.getText().matches("^[a-zA-Z]*$"))){
            lblWHname1.setText("Invalid input. Please enter only alphabets");
        }
        else{
            lblWHname1.setText("");
        }
    }//GEN-LAST:event_txtWHnameFocusLost

    private void txtWHPhnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHPhnoFocusLost
        // TODO add your handling code here:
        if(!(txtWHPhno.getText().matches("^[0-9]*$")) || !(txtWHPhno.getText().length()==10)) {
                lblWHPhno1.setText("Please enter a valid phone number");
        }
        else{
             lblWHPhno1.setText("");
            
        }
    }//GEN-LAST:event_txtWHPhnoFocusLost

    private void txtWHZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHZipFocusLost
        // TODO add your handling code here:
        if((txtWHZip.getText().matches("^[a-zA-Z]*$"))){
            lblWHZip1.setText("Invalid input. Please enter only numbers");
        }
        else{
            lblWHZip1.setText("");
        }
    }//GEN-LAST:event_txtWHZipFocusLost

    private void txtWHFCAdminFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWHFCAdminFocusLost
        // TODO add your handling code here:
        if(!(txtWHFCAdmin.getText().matches("^[a-zA-Z]*$"))){
            lblWHFCAdmin1.setText("Invalid input. Please enter only alphabets.");
        }
        else{
            lblWHFCAdmin1.setText("");
        }
    }//GEN-LAST:event_txtWHFCAdminFocusLost

    private void txtFCApwd1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCApwd1FocusLost
        // TODO add your handling code here:
        if(!(txtFCApwd.getText().equals(txtFCApwd1.getText()))){
            lblFCApwd2.setText("Password Mismatch. Please verify the password entered.");
        }
        else{
            lblFCApwd2.setText("");
        }
    }//GEN-LAST:event_txtFCApwd1FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblAddWHTitle;
    private javax.swing.JLabel lblFCApwd;
    private javax.swing.JLabel lblFCApwd1;
    private javax.swing.JLabel lblFCApwd2;
    private javax.swing.JLabel lblFCAuname;
    private javax.swing.JLabel lblWHAdd;
    private javax.swing.JLabel lblWHCity;
    private javax.swing.JLabel lblWHFCAdmin;
    private javax.swing.JLabel lblWHFCAdmin1;
    private javax.swing.JLabel lblWHPhno;
    private javax.swing.JLabel lblWHPhno1;
    private javax.swing.JLabel lblWHState;
    private javax.swing.JLabel lblWHZip;
    private javax.swing.JLabel lblWHZip1;
    private javax.swing.JLabel lblWHid;
    private javax.swing.JLabel lblWHid2;
    private javax.swing.JLabel lblWHname;
    private javax.swing.JLabel lblWHname1;
    private javax.swing.JTextField txtFCApwd;
    private javax.swing.JTextField txtFCApwd1;
    private javax.swing.JTextField txtFCAuname;
    private javax.swing.JTextField txtWHAdd;
    private javax.swing.JTextField txtWHCity;
    private javax.swing.JTextField txtWHFCAdmin;
    private javax.swing.JTextField txtWHPhno;
    private javax.swing.JTextField txtWHState;
    private javax.swing.JTextField txtWHZip;
    private javax.swing.JTextField txtWHid;
    private javax.swing.JTextField txtWHname;
    // End of variables declaration//GEN-END:variables

    private void clearfields() {
        txtWHid.setText("");
        txtWHname.setText("");
        txtWHPhno.setText("");
        txtWHAdd.setText("");
        txtWHCity.setText("");
        txtWHState.setText("");
        txtWHZip.setText("");
        txtWHFCAdmin.setText("");
        txtFCAuname.setText("");
        txtFCApwd.setText("");
        txtFCApwd1.setText("");
    }

    private boolean nullCheck() {
        if(txtWHid.getText().length()!=0 && txtWHname.getText().length()!=0 && txtWHPhno.getText().length()!=0 
                && txtWHAdd.getText().length()!=0 && txtWHCity.getText().length()!=0 && txtWHState.getText().length()!=0
                && txtWHZip.getText().length()!=0 && txtWHFCAdmin.getText().length()!=0 && txtFCAuname.getText().length()!=0
                && txtFCApwd.getText().length()!=0 && txtFCApwd1.getText().length()!=0)
        {
            return false;
        }
        else return true;
    }
   
}
