/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.FCPantry.FCPantry;
import Business.FCPantry.FCPantryDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import userinterface.DonorRole.DonorProfilePanel;

/**
 *
 * @author sowmyachinimilli
 */
public class ViewModifyPantryPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewModifyPantryPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    FCPantryDirectory fcpd;
    public ViewModifyPantryPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        populatePantryTable();
        txtFCPuname.setEnabled(false);
        
        setBG();
        makeTableTransparent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddWHTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPantry = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lblFCPname = new javax.swing.JLabel();
        txtFCPname = new javax.swing.JTextField();
        lblFCPPhno = new javax.swing.JLabel();
        txtFCPPhno = new javax.swing.JTextField();
        lblFCPAdd = new javax.swing.JLabel();
        txtFCPAdd = new javax.swing.JTextField();
        lblFCPCity = new javax.swing.JLabel();
        txtFCPCity = new javax.swing.JTextField();
        lblFCPState = new javax.swing.JLabel();
        txtFCPState = new javax.swing.JTextField();
        lblFCPZip = new javax.swing.JLabel();
        txtFCPZip = new javax.swing.JTextField();
        lblFCPManager = new javax.swing.JLabel();
        txtFCPManager = new javax.swing.JTextField();
        lblFCPuname = new javax.swing.JLabel();
        txtFCPuname = new javax.swing.JTextField();
        lblFCPpwd = new javax.swing.JLabel();
        txtFCPpwd = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblFCPid = new javax.swing.JLabel();
        lblFCPid1 = new javax.swing.JLabel();
        lblFCPname1 = new javax.swing.JLabel();
        lblFCPPhno1 = new javax.swing.JLabel();
        lblFCPAdd1 = new javax.swing.JLabel();
        lblFCPCity1 = new javax.swing.JLabel();
        lblFCPState1 = new javax.swing.JLabel();
        lblFCPZip1 = new javax.swing.JLabel();
        lblFCPManager1 = new javax.swing.JLabel();
        lblFCPuname1 = new javax.swing.JLabel();
        lblFCPpwd1 = new javax.swing.JLabel();
        LabelImg = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddWHTitle.setFont(new java.awt.Font("Georgia", 1, 29)); // NOI18N
        lblAddWHTitle.setForeground(new java.awt.Color(51, 153, 255));
        lblAddWHTitle.setText("View/Modify Pantry");
        add(lblAddWHTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, -1, -1));

        tblPantry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Pantry Id", "Pantry Name", "Warehouse Name", "Pantry Manager", "Phone Number", "Address", "City", "State", "Zipcode"
            }
        ));
        tblPantry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPantryMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPantry);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 840, 153));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(726, 200, 92, -1));

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 200, 92, -1));

        lblFCPname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPname.setText("Pantry Name");
        add(lblFCPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 239, -1, -1));

        txtFCPname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPnameFocusLost(evt);
            }
        });
        txtFCPname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFCPnameKeyReleased(evt);
            }
        });
        add(txtFCPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 235, 137, -1));

        lblFCPPhno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 304, -1, -1));

        txtFCPPhno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPPhno.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPPhno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPPhnoFocusLost(evt);
            }
        });
        txtFCPPhno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFCPPhnoKeyReleased(evt);
            }
        });
        add(txtFCPPhno, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 272, 137, -1));

        lblFCPAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPAdd.setText("Address");
        add(lblFCPAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 312, -1, -1));

        txtFCPAdd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPAdd.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 308, 137, -1));

        lblFCPCity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPCity.setText("City");
        add(lblFCPCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(299, 349, -1, -1));

        txtFCPCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPCity.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 345, 137, -1));

        lblFCPState.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPState.setText("State");
        add(lblFCPState, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 386, -1, -1));

        txtFCPState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPState.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPState, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 382, 137, -1));

        lblFCPZip.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPZip.setText("Zipcode");
        add(lblFCPZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 423, -1, -1));

        txtFCPZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPZip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPZipFocusLost(evt);
            }
        });
        add(txtFCPZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 419, 137, -1));

        lblFCPManager.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPManager.setText("FC Pantry Manager");
        add(lblFCPManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 460, -1, -1));

        txtFCPManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPManager.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFCPManager.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFCPManagerFocusLost(evt);
            }
        });
        add(txtFCPManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 456, 137, -1));

        lblFCPuname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPuname.setText("FCP Manager Username");
        add(lblFCPuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 497, -1, -1));

        txtFCPuname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPuname.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 493, 137, -1));

        lblFCPpwd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPpwd.setText("Password");
        add(lblFCPpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 530, -1, 25));

        txtFCPpwd.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFCPpwd.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtFCPpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 530, 137, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 573, 92, -1));

        lblFCPid.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPid.setText("Pantry Id:");
        add(lblFCPid, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 220, -1, -1));

        lblFCPid1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 217, -1, -1));

        lblFCPname1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 243, -1, -1));

        lblFCPPhno1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFCPPhno1.setText("Phone Number");
        add(lblFCPPhno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 281, -1, -1));

        lblFCPAdd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPAdd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 339, -1, -1));

        lblFCPCity1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPCity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 377, -1, -1));

        lblFCPState1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPState1, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 415, -1, -1));

        lblFCPZip1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPZip1, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 453, -1, -1));

        lblFCPManager1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPManager1, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 477, -1, -1));

        lblFCPuname1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPuname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 497, -1, -1));

        lblFCPpwd1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblFCPpwd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 526, -1, 25));
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1430, 680));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPantry.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a record to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPantry.getModel();
        FCPantry selectedFCP = (FCPantry)model.getValueAt(selectedRowIndex, 0);
        /* // First delete the customer from employee
        this.system.getEmployeeDirectory().deleteEmployee(selectedRest.getResManagerName());
        // And thne delete the userAccount
        this.system.getUserAccountDirectory().deleteUserAcc(
            this.system.getRestaurantDirectory().getResList().
            get(selectedRowIndex).getUserAcc()
        );
        // finally delete the user from customer directory*/
        //  ecosystem.getFCPDirectory().deleteFCPantry(selectedFCP);
        fcpd= ecosystem.getFCPDirectory();
        fcpd.deleteFCPantry(selectedFCP);
        ecosystem.setFCPDirectory(fcpd);
        JOptionPane.showMessageDialog(this, "Food Cloud Pantry deleted Successfully");
        populatePantryTable();
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
      public void makeTableTransparent() {
        tblPantry.setOpaque(false);
        ((DefaultTableCellRenderer) tblPantry.getDefaultRenderer(Object.class)).setOpaque(false);
        tblPantry.setShowGrid(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.WHITE);

        for (int i = 0; i < tblPantry.getModel().getColumnCount(); i++) {
            tblPantry.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPantry.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a record to Edit");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPantry.getModel();
        FCPantry selectedFCP = (FCPantry)model.getValueAt(selectedRowIndex, 0);
        lblFCPid1.setText(selectedFCP.getFcpId());
        txtFCPname.setText(selectedFCP.getFcpName());
        txtFCPPhno.setText(selectedFCP.getFcpPhno());
        txtFCPAdd.setText(selectedFCP.getFcpAddres());
        txtFCPCity.setText(selectedFCP.getFcpCity());
        txtFCPState.setText(selectedFCP.getFcpState());
        txtFCPZip.setText(selectedFCP.getFcpZipcode());
        txtFCPManager.setText(selectedFCP.getFcpManager());
        txtFCPuname.setText(selectedFCP.getFcpAccount().getUsername());
        txtFCPpwd.setText(selectedFCP.getFcpAccount().getPassword());
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtFCPnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPnameFocusLost
        // TODO add your handling code here:
        if(!(txtFCPname.getText().matches("^[a-zA-Z]*$"))){
            lblFCPname1.setText("Invalid input. Please enter only alphabets");
        }
        else{
            lblFCPname1.setText("");
        }
    }//GEN-LAST:event_txtFCPnameFocusLost

    private void txtFCPnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFCPnameKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFCPnameKeyReleased

    private void txtFCPPhnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPPhnoFocusLost
        // TODO add your handling code here:
        if(!(txtFCPPhno.getText().matches("^[0-9]*$")) || !(txtFCPPhno.getText().length()==10)) {
            lblFCPPhno1.setText("Please enter a valid phone number");
        }
        else{
            lblFCPPhno1.setText("");

        }
    }//GEN-LAST:event_txtFCPPhnoFocusLost

    private void txtFCPPhnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFCPPhnoKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFCPPhnoKeyReleased

    private void txtFCPZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPZipFocusLost
        // TODO add your handling code here:
        if((txtFCPZip.getText().matches("^[a-zA-Z]*$"))){
            lblFCPZip1.setText("Invalid input. Please enter only numbers");
        }
        else{
            lblFCPZip1.setText("");
        }
    }//GEN-LAST:event_txtFCPZipFocusLost

    private void txtFCPManagerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFCPManagerFocusLost
        // TODO add your handling code here:
        if(!(txtFCPManager.getText().matches("^[a-zA-Z]*$"))){
            lblFCPManager1.setText("Invalid input. Please enter only alphabets");
        }
        else{
            lblFCPManager1.setText("");
        }
    }//GEN-LAST:event_txtFCPManagerFocusLost

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPantry.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a record to update");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPantry.getModel();
        String FCPid = lblFCPid1.getText();

        ArrayList<FCPantry> fcpList = ecosystem.getFCPDirectory().getFcpList();
        for(FCPantry f: fcpList)
        {
            if(f.getFcpId().equals(FCPid))
            {
                f.setFcpName(txtFCPname.getText());
                f.setFcpPhno(txtFCPPhno.getText());
                f.setFcpAddres(txtFCPAdd.getText());
                f.setFcpCity(txtFCPCity.getText());
                f.setFcpState(txtFCPState.getText());
                f.setFcpZipcode(txtFCPZip.getText());
                f.setFcpManager(txtFCPManager.getText());
                //UserAccount FCPua=new UserAccount();
                //FCPua.setUsername(txtFCPuname.getText());
                //FCPua.setPassword(txtFCPpwd.getText());
                //f.setFcpAccount(FCPua);
                if(f.getFcpAccount().getUsername().equals(txtFCPuname.getText())){
                    Employee emp=new Employee();
                    emp.setName(txtFCPManager.getText());
                    f.getFcpAccount().setPassword(txtFCPpwd.getText());
                    f.getFcpAccount().setEmployee(emp);
                }
                break;
            }

        } 
        // ecosystem.setFCWDirectory(fcwList);
        JOptionPane.showMessageDialog(this, "Food Cloud Pantry details updated successfully");
        clearfields();
        populatePantryTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblPantryMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPantryMousePressed
        // TODO add your handling code here:
                 tblPantry.setSelectionForeground(Color.BLUE);

    }//GEN-LAST:event_tblPantryMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddWHTitle;
    private javax.swing.JLabel lblFCPAdd;
    private javax.swing.JLabel lblFCPAdd1;
    private javax.swing.JLabel lblFCPCity;
    private javax.swing.JLabel lblFCPCity1;
    private javax.swing.JLabel lblFCPManager;
    private javax.swing.JLabel lblFCPManager1;
    private javax.swing.JLabel lblFCPPhno;
    private javax.swing.JLabel lblFCPPhno1;
    private javax.swing.JLabel lblFCPState;
    private javax.swing.JLabel lblFCPState1;
    private javax.swing.JLabel lblFCPZip;
    private javax.swing.JLabel lblFCPZip1;
    private javax.swing.JLabel lblFCPid;
    private javax.swing.JLabel lblFCPid1;
    private javax.swing.JLabel lblFCPname;
    private javax.swing.JLabel lblFCPname1;
    private javax.swing.JLabel lblFCPpwd;
    private javax.swing.JLabel lblFCPpwd1;
    private javax.swing.JLabel lblFCPuname;
    private javax.swing.JLabel lblFCPuname1;
    private javax.swing.JTable tblPantry;
    private javax.swing.JTextField txtFCPAdd;
    private javax.swing.JTextField txtFCPCity;
    private javax.swing.JTextField txtFCPManager;
    private javax.swing.JTextField txtFCPPhno;
    private javax.swing.JTextField txtFCPState;
    private javax.swing.JTextField txtFCPZip;
    private javax.swing.JTextField txtFCPname;
    private javax.swing.JTextField txtFCPpwd;
    private javax.swing.JTextField txtFCPuname;
    // End of variables declaration//GEN-END:variables

    private void populatePantryTable() {
        DefaultTableModel model = (DefaultTableModel) tblPantry.getModel();
        model.setRowCount(0);
        for(FCPantry fcp: ecosystem.getFCPDirectory().getFcpList()){
           Object[] row = new Object[9];
           row[0] =fcp;
           row[1] =fcp.getFcpName();
           row[2] =fcp.getFcpWHname();
           row[3] =fcp.getFcpManager();
           row[4] =fcp.getFcpPhno();
           row[5] =fcp.getFcpAddres();
           row[6] =fcp.getFcpCity();
           row[7] =fcp.getFcpState();
           row[8] =fcp.getFcpZipcode();
           model.addRow(row);
        }  
    } 

    private void clearfields() {
        txtFCPname.setText("");
        txtFCPPhno.setText("");
        txtFCPAdd.setText("");
        txtFCPCity.setText("");
        txtFCPState.setText("");
        txtFCPZip.setText("");
        txtFCPManager.setText("");
        txtFCPuname.setText("");
        txtFCPpwd.setText("");
    }
}
